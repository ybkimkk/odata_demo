<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.TestMapper">

    <resultMap type="com.example.demo.entity.TestEntity" id="TestMap">
        <result property="ID" column="ID"/>
        <result property="NAME" column="NAME"/>
        <result property="AGE" column="AGE"/>
        <result property="PRICE" column="PRICE"/>
        <collection property="TEST_ITEM" ofType="com.example.demo.entity.TestItemEntity">
            <id property="ID" column="ITEM_ID"/>
            <result property="NAME" column="ITEM_NAME"/>
            <result property="TEST_ID" column="ITEM_TEST_ID"/>
        </collection>
    </resultMap>

    <sql id="base_column">
        test.`ID`,
        test.`NAME`,
        test.`AGE`,
        test.`PRICE`,
        test_item.`ID` AS ITEM_ID,
        test_item.`NAME` AS ITEM_NAME,
        test_item.`TEST_ID` AS ITEM_TEST_ID
    </sql>

    <sql id="table_name">`odata`.`test`</sql>

    <sql id="base_where">
        <where>
            <if test="arg.ID != null">
                and `test`.`ID` = #{arg.ID}
            </if>
            <if test="arg.NAME != null and arg.NAME != ''">
                and `test`.`NAME` = #{arg.NAME}
            </if>
            <if test="arg.AGE != null">
                and `test`.`AGE` = #{arg.AGE}
            </if>
            <if test="arg.PRICE != null and arg.PRICE != ''">
                and `test`.`PRICE` = #{arg.PRICE}
            </if>
        </where>
    </sql>

    <select id="selectByCondition" resultMap="TestMap">
        SELECT
        <include refid="base_column"/>
        FROM
        <include refid="table_name"/>
        LEFT JOIN `test_item` ON `test`.`ID` = `test_item`.`TEST_ID`
        <where>
            <trim prefixOverrides="and" prefix="">
                <if test="arg.filter != null and arg.filter != ''">
                    ${arg.filter}
                </if>
                <if test="arg.filter == null or arg.filter == ''">
                    <include refid="base_where"/>
                </if>
                <if test="arg.join !=null">
                    <foreach collection="arg.join" item="item">
                        and ${item.table}.${item.field} = #{item.value}
                    </foreach>
                </if>
            </trim>
        </where>

        <if test="arg.orderBy != null and arg.orderBy != ''">
            ORDER BY ${arg.orderBy}
        </if>
        <if test="arg.offset != null and arg.count != null">
            LIMIT #{arg.offset} ,#{arg.count}
        </if>
        <if test="arg.offset == null and arg.count != null">
            LIMIT #{arg.count}
        </if>
    </select>

    <update id="updateBatch">
        <foreach collection="arg" item="item">
            update
            <include refid="table_name"/>
            <set>
                <trim suffixOverrides="," prefixOverrides=",">
                    <if test="item.NAME != null and item.NAME != ''">
                        `NAME`= #{item.NAME},
                    </if>
                    <if test="item.AGE != null">
                        `AGE`= #{item.AGE},
                    </if>
                    <if test="item.PRICE != null and item.PRICE != ''">
                        `PRICE`= #{item.PRICE}
                    </if>
                </trim>
            </set>
            <where>ID = #{item.ID}</where>
        </foreach>
    </update>

    <insert id="insertByCondition" keyProperty="ID" parameterType="com.example.demo.entity.TestEntity"
            useGeneratedKeys="true">
        insert into
        <include refid="table_name"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="arg.ID != null">
                `ID`,
            </if>
            <if test="arg.NAME != null and arg.NAME != ''">
                `NAME`,
            </if>
            <if test="arg.AGE != null">
                `AGE`,
            </if>
            <if test="arg.PRICE != null and arg.PRICE != ''">
                `PRICE`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")">
            <if test="arg.ID != null">
                #{arg.ID},
            </if>
            <if test="arg.NAME != null and arg.NAME != ''">
                #{arg.NAME},
            </if>
            <if test="arg.AGE != null">
                #{arg.AGE},
            </if>
            <if test="arg.PRICE != null and arg.PRICE != ''">
                #{arg.PRICE}
            </if>
        </trim>

    </insert>
</mapper>

